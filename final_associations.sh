#!/bin/sh
source ~/software_paths.conf

######---------------------------------------------------------
######    Last updated: 2020 Feb 9
######---------------------------------------------------------



######---------------------------------------------------------
######    Start the log
######---------------------------------------------------------

date | tee -a ~/scripthistory_gwas.log
echo 'Running final_associations.sh with the following arguments:' \
		| tee -a ~/scripthistory_gwas.log

######---------------------------------------------------------

function pwait() {
	while [ $(jobs -p | wc -l) -ge $1 ]; do
		sleep 1
	done
}

######---------------------------------------------------------
######    Parse arguments and write them on the log
######---------------------------------------------------------

OPTIND=1
dataset=''
covarpath=''
covars=5
outliers=${BLANKFILE}
dcovarpath=''
customcovars=''
threads=22
memory=50000

while getopts "hd:c:n:o:v:e:t:m:" opt; do
	case "$opt" in
		h) echo "Runs the associations on the dataset. For use on binary phenotypes."
			echo "Runs chi^2, logistic regression on covariates and MLM."
			echo "Usage: final_associations.sh -d [dataset] "
			echo "			-c [pca covariate file (optional)] "
			echo "			-n [number of pca covariates to use (default 5)] "
			echo "			-e [discreet covariate file (optional)] "
			echo "			-o [outliers file (optional: default ~/blank.file)] "
			echo "			-v [custom combination of covariates (optional)] "
			echo "			-t [threads (optional: default 22)] "
			echo "			-m [memory (optional: default 50000)]"
			sed -i '$d' ~/scripthistory_gwas.log
			sed -i '$d' ~/scripthistory_gwas.log
			exit 0 ;;
		d) dataset=`readlink -e $OPTARG.bed | sed 's/\.bed//'` 
			echo -e '\t -d '$OPTARG | tee -a ~/scripthistory_gwas.log ;;
		c) covarpath=`readlink -e $OPTARG` 
			echo -e '\t -c '$OPTARG | tee -a ~/scripthistory_gwas.log ;;
		n) covars=$OPTARG 
			echo -e '\t -n '$OPTARG | tee -a ~/scripthistory_gwas.log ;;
		v) customcovars=$OPTARG 
			echo -e '\t -v '$OPTARG | tee -a ~/scripthistory_gwas.log ;;
		e) dcovarpath=`readlink -e $OPTARG` 
			echo -e '\t -e '$OPTARG | tee -a ~/scripthistory_gwas.log ;;
		o) outliers=`readlink -e $OPTARG` 
			echo -e '\t -o '$OPTARG | tee -a ~/scripthistory_gwas.log ;;
		t) threads=$OPTARG 
			echo -e '\t -t '$OPTARG | tee -a ~/scripthistory_gwas.log ;;
		m) memory=$OPTARG 
			echo -e '\t -m '$OPTARG | tee -a ~/scripthistory_gwas.log ;;
	esac
done
echo '' | tee -a ~/scripthistory_gwas.log

######---------------------------------------------------------


######---------------------------------------------------------
######     Start analysis
######---------------------------------------------------------

mkdir ${dataset##*/}_assoc_$(echo ${outliers##*/} | cut -d'.' -f1)$(if [ -n "$dcovarpath" ] ; then echo "_"$(echo ${dcovarpath##*/} | cut -d'.' -f1) ; fi)
cd ${dataset##*/}_assoc_$(echo ${outliers##*/} | cut -d'.' -f1)$(if [ -n "$dcovarpath" ] ; then echo "_"$(echo ${dcovarpath##*/} | cut -d'.' -f1) ; fi)

date >> runtime.info

echo -e $latexdoc > report.tex
echo -e $latexbeamer > slides.tex

echo -e $startheader


echo '
\clearpage
\section{Associations of \texttt{\detokenize{'${dataset##*/}'}}}

In this section we describe the results of the associations as performed on the clean data.
' >> report.tex


if [ -n "$covarpath" ]; then
	
	echo '
	
	\subsection{Sample overview in PCA}
	
	Here I outline the samples
	
	\begin{table}[H]
	\caption{Overview of samples in the analysis. Input is the number of samples before removal
	of outliers and relatives. Association ready is the number of samples that were used for
	the subsequent association steps.}
	\centering
	\begin{tabular}{lllll}\toprule
		Dataset&Cases&Controls&Total&SNPs \\ \midrule
		Input dataset&'`awk '{if($6==2) print}' ${dataset}.fam | wc -l`'&
		'`awk '{if($6==1) print}' ${dataset}.fam | wc -l`'&
		'`wc -l ${dataset}.fam | awk '{print $1}'`'&
		'`wc -l ${dataset}.bim | awk '{print $1}'`'\\
	Association-ready dataset&'`awk '{if($6==2) print}' $(dirname ${covarpath})/pca.fam | wc -l`'&
		'`awk '{if($6==1) print}' $(dirname ${covarpath})/pca.fam | wc -l`'&
		'`wc -l $(dirname ${covarpath})/pca.fam | awk '{print $1}'`'&
		'`wc -l ${dataset}.bim | awk '{print $1}'`' \\
		\bottomrule
	\end{tabular}
	\end{table}
	
	\begin{figure}[H]
	\centering
	\includegraphics[width=0.75\textwidth,keepaspectratio]{{'`\
		readlink -e  $(dirname ${covarpath})/pca-plot-pca-1:2-2d.pdf| sed 's/\.pdf//' `'}.pdf}
	\caption{Scatterplot of the first two PCs generated by the PCA}
	\end{figure}
	
	\begin{figure}[H]
	\centering
	\includegraphics[width=0.75\textwidth,keepaspectratio]{{'`\
		readlink -e  $(dirname ${covarpath})/pca-plot-pca-3:4-2d.pdf| sed 's/\.pdf//' `'}.pdf}
	\caption{Scatterplot of the third and fourth PCs generated by the PCA}
	\end{figure}
	
	\begin{figure}[H]
	\centering
	\includegraphics[width=0.75\textwidth,keepaspectratio]{{'`\
		readlink -e  $(dirname ${covarpath})/pca-plot-pca-5:6-2d.pdf| sed 's/\.pdf//' `'}.pdf}
	\caption{Scatterplot of the fifth and sixth PCs generated by the PCA}
	\end{figure}
	
	' >> report.tex
fi


#####---------------------------------------------------------
#####      First a simple association using PLINK
#####---------------------------------------------------------

#echo -e '\nStep ❶'
#echo -e ${hru}
#	${PLINK2PATH} --bfile ${dataset} \
#					--allow-no-sex \
#					--assoc \
#					--freq \
#					--remove ${outliers} \
#					--out ${dataset##*/}_assoc \
#					--ci 0.95 \
#					--threads ${threads} \
#					--memory ${memory}
#echo -e ${hrb}'\n'


#######    Get top results ( p <= 1e-3 )
#cat <(head -1 ${dataset##*/}_assoc.assoc) \
#	<(sort -gk9 ${dataset##*/}_assoc.assoc | grep -v NA \
#						| awk '{if($9<=1e-3) print}') \
#		> ${dataset##*/}_assoc_top.assoc


#echo -e '\nStep ❶'
#echo -e ${hru}
#	${PLINK2PATH} --annotate ${dataset##*/}_assoc_top.assoc \
#								ranges=${REFPATH}plink/glist-hg19 \
#					--border 20 \
#					--out ${dataset##*/}_assoc_top \
#					--memory ${memory}
#echo -e ${hrb}'\n'


#echo -e '\nStep ❶'
#echo -e ${hru}
#	${PLINK2PATH} --clump ${dataset##*/}_assoc.assoc \
#					--allow-no-sex \
#					--bfile ${dataset} \
#					--remove ${outliers} \
#					--clump-range ${REFPATH}plink/glist-hg19 \
#					--clump-range-border 20 \
#					--out ${dataset##*/}_assoc_clump \
#					--memory ${memory}
#echo -e ${hrb}'\n'


#echo -e ${hru}
#echo 'Plotting the manhattan and qq-plots for this association'
#python ${SCRIPTPATH}manhattan_plot.py -f ${dataset##*/}_assoc.assoc \
#										-s 8 0 2 1 \
#										-t 0.05 \
#										-l 1
#python ${SCRIPTPATH}qq-plot.py -f ${dataset##*/}_assoc.assoc \
#								-p 8 \
#								-l 1 \
#								-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
#									$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)
#gzip -f ${dataset##*/}_assoc.assoc ${dataset##*/}_assoc.frq
#echo -e ${hrb}'\n'

#echo 'Zipping and creating extended association results.'
#paste -d ' ' <(zcat ${dataset##*/}_assoc.assoc.gz ) \
#			<(cat <(echo "MAF NMISS") \
#				<(zcat ${dataset##*/}_assoc.frq.gz | tail -n +2 | awk '{print $5,$6/2}') ) \
#			| tr -s ' ' | gzip -c \
#						> ${dataset##*/}_assoc.assocext.gz

#echo -e ${hru}
#python ${LDSCPATH}munge_sumstats.py \
#						--sumstats ${dataset##*/}_assoc.assocext.gz \
#						--out ${dataset##*/}_assoc_ldsc \
#						--N $(grep 'remaining\.' ${dataset##*/}_assoc.log | awk '{print $2}') \
#						--ignore MAF
#echo -e ${hrb}'\n'

#echo -e ${hru}
#python ${LDSCPATH}ldsc.py \
#						--h2 ${dataset##*/}_assoc_ldsc.sumstats.gz \
#						--ref-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#						--w-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#						--out ${dataset##*/}_assoc_ldsc_h2
#echo -e ${hrb}'\n'

#python -c "import scipy.stats,sys ; print(scipy.stats.norm.sf(abs((float(sys.argv[1])-1.0)/float(sys.argv[2]))))" $(grep Intercept ${dataset##*/}_assoc_ldsc_h2.log | awk '{print $2,$3}' | tr -d '(' | tr -d ')') | tee ${dataset##*/}_assoc_ldsc_h2.inpval

echo '
\clearpage

\subsection{Simple Association (PLINK)}
Associations in PLINK without using regression on any covariates.
\begin{figure}[H]
	\centering
	\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
					manhattan-plot-${dataset##*/}_assoc.assoc.png | sed 's/\.png//' `'}.png}
	\caption{Manhattan plot without PC correction}
\end{figure}

\begin{figure}[H]
	\centering
	\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
					qq-plot-${dataset##*/}_assoc.assoc.png | sed 's/\.png//' `'}.png}
	\caption{QQ-plot without PC correction}
\end{figure}

\begin{table}[H]
	\caption{LDSC intercept statistics}
	\centering
	\begin{tabularx}{0.5\textwidth}{ll}\toprule
				h_{SNP}^2 : & '`grep Observed ${dataset##*/}_assoc_ldsc_h2.log \
				| awk '{print $5,$6}' `' \\
				'`grep Intercept ${dataset##*/}_assoc_ldsc_h2.log \
				| sed 's/ /\&/' `' \\
				'`grep Ratio ${dataset##*/}_assoc_ldsc_h2.log \
				| sed 's/ /\&/' `' \\
				Intercept p-value: & 
				'`cat ${dataset##*/}_assoc_ldsc_h2.inpval`' \\
		\bottomrule
	\end{tabularx}
\end{table}

\clearpage

\begin{table}[H]
	\caption{Top annotated results without PC correction}
	\centering
	\begin{scriptsize}
	\begin{tabularx}{\textwidth}{lLLLLLLLLp{3cm}}\toprule
		'`awk '{print $2,$1,$3,$4,$5,$6,$9,$10,$11,$14}' ${dataset##*/}_assoc_top.annot \
				| head -20 \
				| sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
		\bottomrule
	\end{tabularx}
	\end{scriptsize}
\end{table}

\begin{table}[H]
	\caption{Top annotated clumped results without PC correction}
	\centering
	\begin{scriptsize}
	\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
		'`awk '{print $2,$1,$3,$4,$5,$6,$7}' ${dataset##*/}_assoc_clump.clumped.ranges \
				| head -20 \
				| sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}' \
				| sed 's/,/, /g' `'
		\bottomrule
	\end{tabularx}
	\end{scriptsize}
\end{table}

' >> report.tex

echo '
\section{Associations of \texttt{\detokenize{'${dataset##*/}'}}}

\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
\begin{figure}[H]
	\centering
	\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
					manhattan-plot-${dataset##*/}_assoc.assoc.png | sed 's/\.png//' `'}.png}
	\caption{Manhattan plot without PC correction}
\end{figure}
\end{frame}

\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
\begin{figure}[H]
	\centering
	\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
					qq-plot-${dataset##*/}_assoc.assoc.png | sed 's/\.png//' `'}.png}
	\caption{QQ-plot without PC correction}
\end{figure}
\end{frame}

\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
\begin{table}[H]
	\caption{Top annotated results without PC correction}
	\centering
	\begin{tiny}
	\begin{tabularx}{\textwidth}{lLLLLLLLLp{3cm}}\toprule
		'`awk '{print $2,$1,$3,$4,$5,$6,$9,$10,$11,$14}' ${dataset##*/}_assoc_top.annot \
				| head -20 \
				| sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
		\bottomrule
	\end{tabularx}
	\end{tiny}
\end{table}
\end{frame}

\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
\begin{table}[H]
	\caption{Top annotated clumped results without PC correction}
	\centering
	\begin{scriptsize}
	\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
		'`awk '{print $2,$1,$3,$4,$5,$6,$7}' ${dataset##*/}_assoc_clump.clumped.ranges \
				| head -20 \
				| sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
		\bottomrule
	\end{tabularx}
	\end{scriptsize}
\end{table}
\end{frame}
' >> slides.tex





######---------------------------------------------------------
######      Association using PCs with logistic 
######        regression in PLINK
######---------------------------------------------------------


if [ -n "$covarpath" ]; then
	echo 'Ditto'
	if [ -n "$dcovarpath" ] ; then
		qcovarcols=$(awk '{print NF-2}' $covarpath | tail -n+2 | head -1)
		dcovarcols=$(awk '{print NF-2}' $dcovarpath | tail -n+2 | head -1)
		
		join -a 1 <(sort -k1,1 ${covarpath}) \
					<(sort -k1,1 ${dcovarpath} | awk '{$2=""; print}' ) \
						> dqcovar.covar
		covarpath1="dqcovar.covar"
	else
		covarpath1=${covarpath}
	fi
	
#	for covar in `seq ${covars}`; do
#		
#		echo -e '\nStep ❷'
#		echo -e ${hru}
#		${PLINK2PATH} --bfile ${dataset} \
#						--allow-no-sex \
#						--remove ${outliers} \
#						--logistic hide-covar \
#						--covar ${covarpath1} \
#						--out ${dataset##*/}_logistic_1-${covar} \
#						--ci 0.95 \
#						--covar-number $(if [ "${covar}" -lt 2 ]; \
#											then echo -n ${covar} ; \
#											if [ -n "$dcovarpath" ] ; then \
#												for numcol in $(seq $dcovarcols); \
#													do echo -n ","$((qcovarcols+numcol)) ; \
#												done ; \
#												echo '' ; fi; \
#										else echo -n "1-"${covar}; \
#											if [ -n "$dcovarpath" ] ; then \
#												for numcol in $(seq $dcovarcols); \
#													do echo -n ","$((qcovarcols+numcol)) ; \
#												done ; fi; \ 
#											echo '' ; fi ) \
#						--threads ${threads} \
#						--memory ${memory}
#		echo -e ${hrb}'\n'
#		
#		
#		
#		######    Get top results ( p <= 1e-3 )
#		cat <(head -1 ${dataset##*/}_logistic_1-${covar}.assoc.logistic) \
#			<(sort -gk12 ${dataset##*/}_logistic_1-${covar}.assoc.logistic | grep -v NA \
#								| awk '{if($12<=1e-3) print}') \
#				> ${dataset##*/}_logistic_1-${covar}_top.assoc.logistic
#		
#		echo -e '\nStep ❷'
#		echo -e ${hru}
#		${PLINK2PATH} --annotate ${dataset##*/}_logistic_1-${covar}_top.assoc.logistic \
#									ranges=${REFPATH}plink/glist-hg19 \
#						--border 20 \
#						--out ${dataset##*/}_logistic_1-${covar}_top \
#						--memory ${memory}
#		echo -e ${hrb}'\n'
#		
#		
#		echo -e '\nStep ❷'
#		echo -e ${hru}
#			${PLINK2PATH} --clump ${dataset##*/}_logistic_1-${covar}.assoc.logistic \
#							--allow-no-sex \
#							--bfile ${dataset} \
#							--remove ${outliers} \
#							--clump-range ${REFPATH}plink/glist-hg19 \
#							--clump-range-border 20 \
#							--out ${dataset##*/}_logistic_1-${covar}_clump \
#							--memory ${memory}
#		echo -e ${hrb}'\n'
#		
#		
#		echo -e ${hru}
#		echo 'Plotting the manhattan and qq-plots for this association'
#		python ${SCRIPTPATH}manhattan_plot.py \
#									-f ${dataset##*/}_logistic_1-${covar}.assoc.logistic \
#									-s 11 0 2 1 \
#									-t 0.05 \
#									-l 1
#		python ${SCRIPTPATH}qq-plot.py \
#									-f ${dataset##*/}_logistic_1-${covar}.assoc.logistic \
#									-p 11 \
#									-l 1 \
#									-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
#										$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)
#		gzip -f ${dataset##*/}_logistic_1-${covar}.assoc.logistic
#		echo -e ${hrb}'\n'
#		
#		echo 'Zipping and creating extended association results.'
#		paste -d ' ' <(zcat ${dataset##*/}_logistic_1-${covar}.assoc.logistic.gz ) \
#					<(zcat ${dataset##*/}_assoc.assoc.gz ) \
#					<(zcat ${dataset##*/}_assoc.frq.gz) \
#						| tr -s ' ' | cut -d ' ' -f 1-13,18-20,31 | gzip -c \
#							> ${dataset##*/}_logistic_1-${covar}.assoc.logisticext.gz
#		
#		echo -e ${hru}
#		python ${LDSCPATH}munge_sumstats.py \
#							--sumstats ${dataset##*/}_logistic_1-${covar}.assoc.logisticext.gz \
#							--out ${dataset##*/}_logistic_1-${covar}_ldsc \
#							--N $(grep 'remaining\.' ${dataset##*/}_logistic_1-${covar}.log \
#									| awk '{print $2}') \
#							--ignore MAF
#		echo -e ${hrb}'\n'
#		
#		echo -e ${hru}
#		python ${LDSCPATH}ldsc.py \
#									--h2 ${dataset##*/}_logistic_1-${covar}_ldsc.sumstats.gz \
#									--ref-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#									--w-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#									--out ${dataset##*/}_logistic_1-${covar}_ldsc_h2
#		echo -e ${hrb}'\n'
#		
#		python -c "import scipy.stats,sys ; print(scipy.stats.norm.sf(abs((float(sys.argv[1])-1.0)/float(sys.argv[2]))))" $(grep Intercept ${dataset##*/}_logistic_1-${covar}_ldsc_h2.log | awk '{print $2,$3}' | tr -d '(' | tr -d ')') | tee ${dataset##*/}_logistic_1-${covar}_ldsc_h2.inpval
#		
#		echo '
#		\clearpage
#		
#		\subsection{Associations using logistic regression (PLINK)}
#		
#		Associations in PLINK using logistic regression on quantitative covariates (PCs)
#		'$(if [ -n "$dcovarpath" ]; then echo 'and qualitative covariates (Sex, Imputation
#		batch etc.)' ; fi)'.
#		
#		\begin{figure}[H]
#			\centering
#			\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#					manhattan-plot-${dataset##*/}_logistic_1-${covar}.assoc.logistic.png \
#											| sed 's/\.png//' `'}.png}
#			\caption{Manhattan plot correcting for PCs 1-'${covar}'}
#		\end{figure}

#		\begin{figure}[H]
#			\centering
#			\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#					qq-plot-${dataset##*/}_logistic_1-${covar}.assoc.logistic.png \
#											| sed 's/\.png//' `'}.png}
#			\caption{QQ-plot correcting for PCs 1-'${covar}'}
#		\end{figure}
#		
#		\begin{table}[H]
#			\caption{LDSC intercept statistics}
#			\centering
#			\begin{tabularx}{0.5\textwidth}{ll}\toprule
#					h_{SNP}^2 : & '`grep Observed ${dataset##*/}_logistic_1-${covar}_ldsc_h2.log \
#						| awk '{print $5,$6}' `' \\
#						'`grep Intercept ${dataset##*/}_logistic_1-${covar}_ldsc_h2.log \
#						| sed 's/ /\&/' `' \\
#						'`grep Ratio ${dataset##*/}_logistic_1-${covar}_ldsc_h2.log \
#						| sed 's/ /\&/' `' \\
#						Intercept p-value & 
#						'`cat ${dataset##*/}_logistic_1-${covar}_ldsc_h2.inpval`' \\
#				\bottomrule
#			\end{tabularx}
#		\end{table}
#		
#		
#		\clearpage
#		
#		\begin{table}[H]
#			\caption{Top annotated results correcting for PCs 1-'${covar}'}
#			\centering
#			\begin{scriptsize}
#			\begin{tabularx}{\textwidth}{lLLLLLLLp{3cm}}\toprule
#					'`awk '{print $2,$1,$3,$4,$7,$8,$11,$12,$13}' \
#						${dataset##*/}_logistic_1-${covar}_top.annot \
#						| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#				\bottomrule
#			\end{tabularx}
#			\end{scriptsize}
#		\end{table}
#		
#		\begin{table}[H]
#			\caption{Top annotated clumped results correcting for PCs 1-'${covar}'}
#			\centering
#			\begin{scriptsize}
#			\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
#						'`awk '{print $2,$1,$3,$4,$5,$6,$7}' \
#						${dataset##*/}_logistic_1-${covar}_clump.clumped.ranges \
#						| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}' \
#						| sed 's/,/, /g' `'
#				\bottomrule
#			\end{tabularx}
#			\end{scriptsize}
#		\end{table}
#		
#		' >> report.tex
#		
#		echo '
#		\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#		\begin{figure}[H]
#			\centering
#			\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#				manhattan-plot-${dataset##*/}_logistic_1-${covar}.assoc.logistic.png \
#													| sed 's/\.png//' `'}.png}
#			\caption{Manhattan plot correcting for PCs 1-'${covar}'}
#		\end{figure}
#		\end{frame}
#		
#		\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#		\begin{figure}[H]
#			\centering
#			\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#				qq-plot-${dataset##*/}_logistic_1-${covar}.assoc.logistic.png \
#													| sed 's/\.png//' `'}.png}
#			\caption{QQ-plot correcting for PCs 1-'${covar}'}
#		\end{figure}
#		\end{frame}
#		
#		\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#		\begin{table}[H]
#			\caption{Top annotated results correcting for PCs 1-'${covar}'}
#			\centering
#			\begin{tiny}
#			\begin{tabularx}{\textwidth}{lLLLLLLLp{3cm}}\toprule
#					'`awk '{print $2,$1,$3,$4,$7,$8,$11,$12,$13}' \
#						${dataset##*/}_logistic_1-${covar}_top.annot \
#						| head -20 \
#						| sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#				\bottomrule
#			\end{tabularx}
#			\end{tiny}
#		\end{table}
#		\end{frame}
#		
#		' >> slides.tex
#	done


	######---------------------------------------------------------
	######      Association using Eigensoft's proposed covariates 
	######        with logistic regression in PLINK
	######---------------------------------------------------------
	
	
#	covar=$(grep Case_Control $(dirname ${covarpath})/pca.pcalog | sort -gk2,2 \
#			| awk '{if($2<0.001) print}'| awk -F"_" '{print $2}' |xargs | tr ' ' ',')
#	
#	if [ "$covar" != "" ] ; then
#		echo -e '\nStep ❷'
#		echo -e ${hru}
#		${PLINK2PATH} --bfile ${dataset} \
#						--allow-no-sex \
#						--remove ${outliers} \
#						--logistic hide-covar \
#						--covar ${covarpath1} \
#						--out ${dataset##*/}_eig_logistic_${covar} \
#						--ci 0.95 \
#						--covar-number $(if [ -n "$dcovarpath" ] ; then \
#											printf ${covar} \ 
#											for numcol in $(seq $dcovarcols); \
#												do echo -n ","$((qcovarcols+numcol)) ; \
#											done ; echo '' ; \
#										else echo -n ${covar} \ 
#											echo '' ; fi ) \
#						--memory ${memory}
#		echo -e ${hrb}'\n'
#	
#	
#		######    Get top results ( p <= 1e-3 )
#		cat <(head -1 ${dataset##*/}_eig_logistic_${covar}.assoc.logistic) \
#			<(sort -gk12 ${dataset##*/}_eig_logistic_${covar}.assoc.logistic | grep -v NA \
#								| awk '{if($12<=1e-3) print}') \
#				> ${dataset##*/}_eig_logistic_${covar}_top.assoc.logistic
#	
#	
#		echo -e '\nStep ❷'
#		echo -e ${hru}
#		${PLINK2PATH} --annotate ${dataset##*/}_eig_logistic_${covar}_top.assoc.logistic \
#									ranges=${REFPATH}plink/glist-hg19 \
#						--border 20 \
#						--out ${dataset##*/}_eig_logistic_${covar}_top \
#						--memory ${memory}
#		echo -e ${hrb}'\n'
#	
#	
#		mv ${dataset##*/}_eig_logistic_${covar}.assoc.logistic \
#			${dataset##*/}_eig_logistic_$(echo ${covar} | sed 's/,/-/g' ).assoc.logistic
#	
#	
#		echo -e '\nStep ❷'
#		echo -e ${hru}
#		${PLINK2PATH} --clump ${dataset##*/}_eig_logistic_$(echo ${covar} \
#								| sed 's/,/-/g' ).assoc.logistic \
#						--allow-no-sex \
#						--bfile ${dataset} \
#						--remove ${outliers} \
#						--clump-range ${REFPATH}plink/glist-hg19 \
#						--clump-range-border 20 \
#						--out ${dataset##*/}_eig_logistic_${covar}_clump \
#						--memory ${memory}
#		echo -e ${hrb}'\n'
#		mv ${dataset##*/}_eig_logistic_$(echo ${covar} | sed 's/,/-/g' ).assoc.logistic \
#					${dataset##*/}_eig_logistic_${covar}.assoc.logistic
#	
#	
#		echo -e ${hru}
#		echo 'Plotting the manhattan and qq-plots for this association'
#		python ${SCRIPTPATH}manhattan_plot.py \
#										-f ${dataset##*/}_eig_logistic_${covar}.assoc.logistic \
#										-s 11 0 2 1 \
#										-t 0.05 \
#										-l 1
#		python ${SCRIPTPATH}qq-plot.py -f ${dataset##*/}_eig_logistic_${covar}.assoc.logistic \
#										-p 11 \
#										-l 1 \
#										-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
#											$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)
#		gzip -f ${dataset##*/}_eig_logistic_${covar}.assoc.logistic
#		echo -e ${hrb}'\n'
#	
#		echo 'Zipping and creating extended association results.'
#		paste -d ' ' <(zcat ${dataset##*/}_eig_logistic_${covar}.assoc.logistic.gz ) \
#					<(zcat ${dataset##*/}_assoc.assoc.gz ) \
#					<(zcat ${dataset##*/}_assoc.frq.gz) \
#						| tr -s ' ' | cut -d ' ' -f 1-13,18-20,31 | gzip -c \
#							> ${dataset##*/}_eig_logistic_${covar}.assoc.logisticext.gz
#	
#		echo -e ${hru}
#		python ${LDSCPATH}munge_sumstats.py \
#							--sumstats ${dataset##*/}_eig_logistic_${covar}.assoc.logisticext.gz \
#							--out ${dataset##*/}_eig_logistic_${covar}_ldsc \
#							--N $(grep 'remaining\.' ${dataset##*/}_eig_logistic_${covar}.log \
#									| awk '{print $2}') \
#							--ignore MAF
#		echo -e ${hrb}'\n'
#		echo -e ${hru}
#		python ${LDSCPATH}ldsc.py \
#									--h2 ${dataset##*/}_eig_logistic_${covar}_ldsc.sumstats.gz \
#									--ref-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#									--w-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#									--out ${dataset##*/}_eig_logistic_${covar}_ldsc_h2
#		echo -e ${hrb}'\n'
#	
#		python -c "import scipy.stats,sys ; print(scipy.stats.norm.sf(abs((float(sys.argv[1])-1.0)/float(sys.argv[2]))))" $(grep Intercept ${dataset##*/}_eig_logistic_${covar}_ldsc_h2.log | awk '{print $2,$3}' | tr -d '(' | tr -d ')') | tee ${dataset##*/}_eig_logistic_${covar}_ldsc_h2.inpval
#		
#	
#		echo '
#		\clearpage
#		\subsection{Association using EIGENSOFTs proposed covariates}
#		In this section we use the PC covariates that have been proposed for EIGENSOFT to correct
#		'$(if [ -n "$dcovarpath" ]; then echo 'for, along with qualitative covariates 
#		(Sex, Imputation batch etc.)'; else echo '.' ; fi)'
#		These PC covariates have a p-value of less than 0.001 in the Tracy-Widom test. \\
#	
#		Covariates (PCs identified by EIGENSOFT): '`echo ${covar}`' (in order of significance) \\
#	
#		\begin{figure}[H]
#			\centering
#			\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#				manhattan-plot-${dataset##*/}_eig_logistic_${covar}.assoc.logistic.png \
#					| sed 's/\.png//' `'}.png}
#			\caption{Manhattan plot using EIGENSOFTs proposed covariates}
#		\end{figure}
#	
#		\begin{figure}[H]
#			\centering
#			\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#						qq-plot-${dataset##*/}_eig_logistic_${covar}.assoc.logistic.png \
#							| sed 's/\.png//' `'}.png}
#			\caption{QQ-plot using EIGENSOFTs proposed covariates}
#		\end{figure}
#	
#		\begin{table}[H]
#			\caption{LDSC intercept statistics}
#			\centering
#			\begin{tabularx}{0.5\textwidth}{ll}\toprule
#				h_{SNP}^2 : & '`grep Observed ${dataset##*/}_eig_logistic_${covar}_ldsc_h2.log \
#						| awk '{print $5,$6}' `' \\
#						'`grep Intercept ${dataset##*/}_eig_logistic_${covar}_ldsc_h2.log \
#						| sed 's/ /\&/' `' \\
#						'`grep Ratio ${dataset##*/}_eig_logistic_${covar}_ldsc_h2.log \
#						| sed 's/ /\&/' `' \\
#						Intercept p-value & 
#						'`cat ${dataset##*/}_eig_logistic_${covar}_ldsc_h2.inpval`' \\
#				\bottomrule
#			\end{tabularx}
#		\end{table}
#	
#		\clearpage
#	
#		\begin{table}[H]
#			\caption{Top annotated results using EIGENSOFTs proposed covariates}
#			\centering
#			\begin{scriptsize}
#			\begin{tabularx}{\textwidth}{lLLLLLLLp{3cm}}\toprule
#					'`awk '{print $2,$1,$3,$4,$7,$8,$11,$12,$13}' \
#					${dataset##*/}_eig_logistic_${covar}_top.annot \
#						| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}' \
#						| sed 's/,/, /g' `'
#				\bottomrule
#			\end{tabularx}
#			\end{scriptsize}
#		\end{table}
#	
#		\begin{table}[H]
#			\caption{Top annotated clumped results using EIGENSOFTs proposed covariates}
#			\centering
#			\begin{scriptsize}
#					\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
#						'`awk '{print $2,$1,$3,$4,$5,$6,$7}' \
#						${dataset##*/}_eig_logistic_${covar}_clump.clumped.ranges \
#						| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}' \
#						| sed 's/,/, /g' `'
#				\bottomrule
#			\end{tabularx}
#			\end{scriptsize}
#		\end{table}
#		' >> report.tex
#	fi
	
	######---------------------------------------------------------
	######      Association using custom combination of covariates 
	######        with logistic regression in PLINK
	######---------------------------------------------------------
	
	if [ -n "$customcovars" ]; then
		
		echo -e '\nStep ❷'
		echo -e ${hru}
		${PLINK2PATH} --bfile ${dataset} \
						--allow-no-sex \
						--remove ${outliers} \
						--logistic hide-covar \
						--covar ${covarpath1} \
						--out ${dataset##*/}_logistic_${customcovars} \
						--ci 0.95 \
						--covar-number ${customcovars} \
						--memory ${memory}
		echo -e ${hrb}'\n'
		
		
		######    Get top results ( p <= 1e-3 )
		cat <(head -1 ${dataset##*/}_logistic_${customcovars}.assoc.logistic) \
			<(sort -gk12 ${dataset##*/}_logistic_${customcovars}.assoc.logistic | grep -v NA \
								| awk '{if($12<=1e-3) print}') \
				> ${dataset##*/}_logistic_${customcovars}_top.assoc.logistic
		
		
		echo -e '\nStep ❷'
		echo -e ${hru}
		${PLINK2PATH} --annotate ${dataset##*/}_logistic_${customcovars}_top.assoc.logistic \
									ranges=${REFPATH}plink/glist-hg19 \
						--border 20 \
						--out ${dataset##*/}_logistic_${customcovars}_top \
						--memory ${memory}
		echo -e ${hrb}'\n'
		
		
		mv ${dataset##*/}_logistic_${customcovars}.assoc.logistic \
			${dataset##*/}_logistic_$(echo ${customcovars} | sed 's/,/-/g' ).assoc.logistic
		
		
		echo -e '\nStep ❷'
		echo -e ${hru}
		${PLINK2PATH} --clump ${dataset##*/}_logistic_$(echo ${customcovars} \
								| sed 's/,/-/g' ).assoc.logistic \
						--allow-no-sex \
						--bfile ${dataset} \
						--remove ${outliers} \
						--clump-range ${REFPATH}plink/glist-hg19 \
						--clump-range-border 20 \
						--out ${dataset##*/}_logistic_${customcovars}_clump \
						--memory ${memory}
		echo -e ${hrb}'\n'
		mv ${dataset##*/}_logistic_$(echo ${customcovars} | sed 's/,/-/g' ).assoc.logistic \
					${dataset##*/}_logistic_${customcovars}.assoc.logistic
		
		
		echo -e ${hru}
		echo 'Plotting the manhattan and qq-plots for this association'
		python ${SCRIPTPATH}manhattan_plot.py \
									-f ${dataset##*/}_logistic_${customcovars}.assoc.logistic \
									-s 11 0 2 1 \
									-t 0.05 \
									-l 1
		python ${SCRIPTPATH}qq-plot.py -f ${dataset##*/}_logistic_${customcovars}.assoc.logistic \
									-p 11 \
									-l 1 \
									-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
										$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)
		gzip -f ${dataset##*/}_logistic_${customcovars}.assoc.logistic
		echo -e ${hrb}'\n'
		
		echo 'Zipping and creating extended association results.'
		paste -d ' ' <(zcat ${dataset##*/}_logistic_${customcovars}.assoc.logistic.gz ) \
					<(zcat ${dataset##*/}_assoc.assoc.gz ) \
					<(zcat ${dataset##*/}_assoc.frq.gz) \
						| tr -s ' ' | cut -d ' ' -f 1-13,18-20,31 | gzip -c \
							> ${dataset##*/}_logistic_${customcovars}.assoc.logisticext.gz
		
		echo -e ${hru}
		python ${LDSCPATH}munge_sumstats.py \
						--sumstats ${dataset##*/}_logistic_${customcovars}.assoc.logisticext.gz \
						--out ${dataset##*/}_logistic_${customcovars}_ldsc \
						--N $(grep 'remaining\.' ${dataset##*/}_logistic_${customcovars}.log \
								| awk '{print $2}') \
						--ignore MAF
		echo -e ${hrb}'\n'
		echo -e ${hru}
		python ${LDSCPATH}ldsc.py \
								--h2 ${dataset##*/}_logistic_${customcovars}_ldsc.sumstats.gz \
								--ref-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
								--w-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
								--out ${dataset##*/}_logistic_${customcovars}_ldsc_h2
		echo -e ${hrb}'\n'
		
		python -c "import scipy.stats,sys ; print(scipy.stats.norm.sf(abs((float(sys.argv[1])-1.0)/float(sys.argv[2]))))" $(grep Intercept ${dataset##*/}_logistic_${customcovars}_ldsc_h2.log | awk '{print $2,$3}' | tr -d '(' | tr -d ')') | tee ${dataset##*/}_logistic_${customcovars}_ldsc_h2.inpval
		
		
		echo '
		\clearpage
		\subsection{Association using custom proposed covariates}
		In this section we use the PC covariates that we have identified to correct
		'$(if [ -n "$dcovarpath" ]; then echo 'for, along with qualitative covariates 
		(Sex, Imputation batch etc.)'; else echo 'for.' ; fi)'\\
		
		Covariates used (numbers $>20$ mean that we are using qualitative covariates
		as well): '`echo ${customcovars}`' \\
		
		\begin{figure}[H]
			\centering
			\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
				manhattan-plot-${dataset##*/}_logistic_${customcovars}.assoc.logistic.png \
					| sed 's/\.png//' `'}.png}
			\caption{Manhattan plot using custom covariates}
		\end{figure}
		
		\begin{figure}[H]
			\centering
			\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
						qq-plot-${dataset##*/}_logistic_${customcovars}.assoc.logisticext.maf001.gz.png \
							| sed 's/\.png//' `'}.png}
			\caption{QQ-plot using EIGENSOFTs custom covariates}
		\end{figure}
		
		\begin{table}[H]
			\caption{LDSC intercept statistics}
			\centering
			\begin{tabularx}{0.5\textwidth}{ll}\toprule
			h_{SNP}^2 : & '`grep Observed ${dataset##*/}_logistic_${customcovars}_ldsc_h2.log \
						| awk '{print $5,$6}' `' \\
						'`grep Intercept ${dataset##*/}_logistic_${customcovars}_ldsc_h2.log \
						| sed 's/ /\&/' `' \\
						'`grep Ratio ${dataset##*/}_logistic_${customcovars}_ldsc_h2.log \
						| sed 's/ /\&/' `' \\
						Intercept p-value & 
						'`cat ${dataset##*/}_logistic_${customcovars}_ldsc_h2.inpval`' \\
				\bottomrule
			\end{tabularx}
		\end{table}
		
		\clearpage
		
		\begin{table}[H]
			\caption{Top annotated results using custom covariates}
			\centering
			\begin{scriptsize}
			\begin{tabularx}{\textwidth}{lLLLLLLLp{3cm}}\toprule
					'`awk '{print $2,$1,$3,$4,$7,$8,$11,$12,$13}' \
					${dataset##*/}_logistic_${customcovars}_top.annot \
						| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}' \
						| sed 's/,/, /g' `'
				\bottomrule
			\end{tabularx}
			\end{scriptsize}
		\end{table}
		
		\begin{table}[H]
			\caption{Top annotated clumped results using custom covariates}
			\centering
			\begin{scriptsize}
					\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
						'`awk '{print $2,$1,$3,$4,$5,$6,$7}' \
						${dataset##*/}_logistic_${customcovars}_clump.clumped.ranges \
						| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}' \
						| sed 's/,/, /g' `'
				\bottomrule
			\end{tabularx}
			\end{scriptsize}
		\end{table}
		' >> report.tex
	fi
fi




######---------------------------------------------------------
######      Also do association analysis using SNPTEST
######        (honestly, I don't like it, sometimes I use
######         it when I want to do an easier meta-analysis)
######---------------------------------------------------------

#covar=$(grep Control_Case $(dirname ${covarpath})/pca.pcalog | sort -gk2,2 \
#		| awk '{if($2<0.001) print}'| awk -F"_" '{print $2}' | xargs)

#cat <(printf "ID_1" && for i in $(seq 20); do printf " cov_"$i ; done && printf \\n) \
#	<(printf "0" && for i in $(seq 20); do printf " C" ; done && printf \\n) \
#	<(awk '{$2 = ""; $23 = ""; print $0}' ${covarpath} | sed 's/  / /g' \
#		| sed '1d') > snptest.covar

#for chr in $(seq 1 22) ; do
#	
#	echo -e '\nStep ❶ for chromosome '${chr}
#	echo -e ${hru}
#	${PLINK2PATH} --bfile ${dataset} \
#					--allow-no-sex \
#					--chr ${chr} \
#					--remove ${outliers} \
#					--recode oxford gen-gz \
#					--out ${dataset##*/}_chr${chr}
#	echo -e ${hrb}'\n'
#	
#	mv ${dataset##*/}_chr${chr}.sample ${dataset##*/}_chr${chr}.sampleold
#	
#	awk 'NR==FNR {h[$1] = $0; next} {print $0,h[$1]}' \
#		snptest.covar ${dataset##*/}_chr${chr}.sampleold \
#		| cut -d" " -f 1-5,7- > ${dataset##*/}_chr${chr}.sample
#	
#done

#echo -e '\nStep ❷ '
#echo -e ${hru}
#for chr in $(seq 1 22) ; do
#	
#	${SNPTESTPATH} -data ${dataset##*/}_chr${chr}.gen.gz ${dataset##*/}_chr${chr}.sample \
#					-pheno phenotype \
#					-method score \
#					-frequentist 1 \
#					-hwe \
#					-o ${dataset##*/}_snptest_add_chr${chr}.snptest \
#					-chunk 10000 \
#					-log ${dataset##*/}_snptest_add_chr${chr}.log &
#	
#	pwait ${threads}
#	
#done
#wait
#echo -e ${hrb}'\n'


#if [ -n "$covar" ]; then
#	
#	echo -e '\nStep ❸'
#	echo -e ${hru}
#	
#	for chr in $(seq 1 22) ; do
#		
#		${SNPTESTPATH} -data ${dataset##*/}_chr${chr}.gen.gz \
#								${dataset##*/}_chr${chr}.sample \
#						-pheno phenotype \
#						-method score \
#						-frequentist 1 \
#						-hwe \
#						-o ${dataset##*/}_snptest_add_cov_chr${chr}.snptest \
#						-cov_names $(for i in $covar; do printf " cov_"$i ; done) \
#						-chunk 10000 \
#						-log ${dataset##*/}_snptest_add_cov_chr${chr}.log &
#		
#		pwait ${threads}
#	done
#	wait
#	echo -e ${hrb}'\n'
#fi

#cat *_add_chr[1-9].snptest *_add_chr1[0-9].snptest *_add_chr2[0-9].snptest \
#	| sed '/^#/ d' | sed '1b;/^alternate_ids/d' | gzip -c \
#									> ${dataset##*/}_snptest_add_chrall.snptest.gz

#if [ -n "$covar" ]; then
#	cat *_add_cov_chr[1-9].snptest *_add_cov_chr1[0-9].snptest *_add_cov_chr2[0-9].snptest \
#		| sed '/^#/ d' | sed '1b;/^alternate_ids/d' | gzip -c \
#										> ${dataset##*/}_snptest_add_cov_chrall.snptest.gz
#fi

#rm -rf *.snptest
#rm -rf ${dataset##*/}_chr*.gen.gz


#######    Get top results ( p <= 1e-3 )
#cat <(zcat ${dataset##*/}_snptest_add_chrall.snptest.gz | head -1) \
#	<(zcat ${dataset##*/}_snptest_add_chrall.snptest.gz | \
#			awk '{if($45<=1e-3) print}' | sort -gk45) \
#		> ${dataset##*/}_snptest_add_chrall_top.snptest

#cat <(echo 'CHR SNP BP A1 TEST NMISS OR STAT P' ) \
#	<(awk '{print $1,$2,$4,$5,"ADD",$32,$42,$47,$45}' \
#		${dataset##*/}_snptest_add_chrall_top.snptest | sed '1d') \
#			> ${dataset##*/}_snptest_add_chrall_top.snptest.plink

#echo -e '\nStep ❹'
#echo -e ${hru}
#${PLINK2PATH} --annotate ${dataset##*/}_snptest_add_chrall_top.snptest.plink \
#							ranges=${REFPATH}plink/glist-hg19 \
#				--border 20 \
#				--out ${dataset##*/}_snptest_add_chrall_top \
#				--memory ${memory}
#echo -e ${hrb}'\n'

#echo -e '\nStep ❺'
#echo -e ${hru}
#	${PLINK2PATH} --clump ${dataset##*/}_snptest_add_chrall_top.snptest.plink \
#					--allow-no-sex \
#					--bfile ${dataset} \
#					--remove ${outliers} \
#					--clump-range ${REFPATH}plink/glist-hg19 \
#					--clump-range-border 20 \
#					--out ${dataset##*/}_snptest_add_chrall_clump \
#					--memory ${memory}
#echo -e ${hrb}'\n'

######    Plot

#python ${SCRIPTPATH}manhattan_plot.py \
#										-f ${dataset##*/}_snptest_add_chrall.snptest.gz \
#										-s 44 0 3 1 \
#										-t 0.05 \
#										-l 1
#python ${SCRIPTPATH}qq-plot.py -f ${dataset##*/}_snptest_add_chrall.snptest.gz \
#								-p 44 \
#								-l 1 \
#								-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
#									$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)

######    Prepare for proper meta-analysis
#	
#cat <(zcat ${dataset##*/}_snptest_add_chrall.snptest.gz | head -1 ) \
#	<(zcat ${dataset##*/}_snptest_add_chrall.snptest.gz | sed '1d' \
#		| awk 'BEGIN{OFS=FS;}{t=$i;$i=$j;$j=t;}1' i=1 j=3 ) \
#		| gzip -c > ${dataset##*/}_snptest_add_chrall_proper.snptest.gz




#if [ -n "$covar" ]; then
#	
#	######    Get top results ( p <= 1e-3 )
#	cat <(zcat ${dataset##*/}_snptest_add_cov_chrall.snptest.gz | head -1) \
#		<(zcat ${dataset##*/}_snptest_add_cov_chrall.snptest.gz | \
#				awk '{if($45<=1e-3) print}' | sort -gk45) \
#			> ${dataset##*/}_snptest_add_cov_chrall_top.snptest
#	
#	cat <(echo 'CHR SNP BP A1 TEST NMISS OR STAT P' ) \
#		<(awk '{print $1,$2,$4,$5,"ADD",$32,$42,$47,$45}' \
#			${dataset##*/}_snptest_add_cov_chrall_top.snptest | sed '1d') \
#				> ${dataset##*/}_snptest_add_cov_chrall_top.snptest.plink
#	
#	echo -e '\nStep ❹'
#	echo -e ${hru}
#	${PLINK2PATH} --annotate ${dataset##*/}_snptest_add_cov_chrall_top.snptest.plink \
#								ranges=${REFPATH}plink/glist-hg19 \
#					--border 20 \
#					--out ${dataset##*/}_snptest_add_cov_chrall_top \
#					--memory ${memory}
#	echo -e ${hrb}'\n'
#	
#	echo -e '\nStep ❺'
#	echo -e ${hru}
#		${PLINK2PATH} --clump ${dataset##*/}_snptest_add_cov_chrall_top.snptest.plink \
#						--allow-no-sex \
#						--bfile ${dataset} \
#						--remove ${outliers} \
#						--clump-range ${REFPATH}plink/glist-hg19 \
#						--clump-range-border 20 \
#						--out ${dataset##*/}_snptest_add_cov_chrall_clump \
#						--memory ${memory}
#	echo -e ${hrb}'\n'
#	
#	python ${SCRIPTPATH}manhattan_plot.py \
#									-f ${dataset##*/}_snptest_add_cov_chrall.snptest.gz \
#									-s 44 0 3 1 \
#									-t 0.05 \
#									-l 1
#	python ${SCRIPTPATH}qq-plot.py -f ${dataset##*/}_snptest_add_cov_chrall.snptest.gz \
#									-p 44 \
#									-l 1 \
#									-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
#										$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)
#	
#	#####    Prepare for proper meta-analysis
#	
#	cat <(zcat ${dataset##*/}_snptest_add_cov_chrall.snptest.gz | head -1 ) \
#		<(zcat ${dataset##*/}_snptest_add_cov_chrall.snptest.gz | sed '1d' \
#			| awk 'BEGIN{OFS=FS;}{t=$i;$i=$j;$j=t;}1' i=1 j=3 ) \
#			| gzip -c > ${dataset##*/}_snptest_add_cov_chrall_proper.snptest.gz
#	
#fi


#echo '
#\clearpage
#\subsection{Association using SNPTEST}
#In this section we desribe the association results using SNPTEST. Sometimes the results
#differ, mainly due to the methodology that SNPTEST uses to overcome missingness in its 
#association model. SNPTEST offers many association tests, the most important ones being
#the frequentist, that can also be probed for interaction with covariates, and the
#bayesian tests.

#\begin{figure}[H]
#	\centering
#	\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#				manhattan-plot-${dataset##*/}_snptest_add_chrall.snptest.gz.png \
#					 | sed 's/\.png//' `'}.png}
#	\caption{Manhattan plot using SNPTEST simple frequentist approach}
#\end{figure}

#\begin{figure}[H]
#	\centering
#	\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#				qq-plot-${dataset##*/}_snptest_add_chrall.snptest.gz.png \
#					| sed 's/\.png//' `'}.png}
#	\caption{QQ-plot using using SNPTEST simple frequentist approach}
#\end{figure}

#\begin{table}[H]
#	\caption{Top annotated results using SNPTEST simple frequentist approach}
#	\centering
#	\begin{scriptsize}
#	\begin{tabularx}{\textwidth}{lLLLLLLp{3cm}}\toprule
#		'`awk '{print $2,$1,$3,$4,$7,$9,$10}' \
#				${dataset##*/}_snptest_add_chrall_top.annot \
#				| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#		\bottomrule
#	\end{tabularx}
#	\end{scriptsize}
#\end{table}

#\begin{table}[H]
#	\caption{Top annotated clumped using SNPTEST simple frequentist approach}
#	\centering
#	\begin{scriptsize}
#	\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
#		'`awk '{print $2,$1,$3,$4,$5,$6,$7}' \
#				${dataset##*/}_snptest_add_chrall_clump.clumped.ranges \
#				| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#		\bottomrule
#	\end{tabularx}
#	\end{scriptsize}
#\end{table}
#' >> report.tex

#if [ -n "$covar" ]; then
#	echo '\clearpage

#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#					manhattan-plot-${dataset##*/}_snptest_add_cov_chrall.snptest.gz.png \
#					 | sed 's/\.png//' `'}.png}
#		\caption{Manhattan plot using SNPTEST frequentist approach and EIGENSOFTs proposed
#					covariates}
#	\end{figure}

#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#					qq-plot-${dataset##*/}_snptest_add_cov_chrall.snptest.gz.png \
#					| sed 's/\.png//' `'}.png}
#		\caption{QQ-plot using SNPTEST frequentist approach and EIGENSOFTs proposed
#					covariates}
#	\end{figure}

#	\begin{table}[H]
#		\caption{Top annotated results using SNPTEST frequentist approach
#				 and EIGENSOFTs proposed covariates}
#		\centering
#		\begin{scriptsize}
#		\begin{tabularx}{\textwidth}{lLLLLLLp{3cm}}\toprule
#			'`awk '{print $2,$1,$3,$4,$7,$9,$10}' \
#					${dataset##*/}_snptest_add_cov_chrall_top.annot \
#					| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#			\bottomrule
#		\end{tabularx}
#		\end{scriptsize}
#	\end{table}

#	\begin{table}[H]
#		\caption{Top annotated clumped using SNPTEST frequentist approach
#				 and EIGENSOFTs proposed covariates}
#		\centering
#		\begin{scriptsize}
#		\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
#			'`awk '{print $2,$1,$3,$4,$5,$6,$7}' \
#				${dataset##*/}_snptest_add_cov_chrall_clump.clumped.ranges \
#					| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#			\bottomrule
#		\end{tabularx}
#		\end{scriptsize}
#	\end{table}

#	' >> report.tex
#fi

#echo '

#\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#\begin{figure}[H]
#	\centering
#	\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#				manhattan-plot-${dataset##*/}_snptest_add_chrall.snptest.gz.png \
#					 | sed 's/\.png//' `'}.png}
#	\caption{Manhattan plot using SNPTEST simple frequentist approach}
#\end{figure}
#\end{frame}

#\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#\begin{figure}[H]
#	\centering
#	\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#				qq-plot-${dataset##*/}_snptest_add_chrall.snptest.gz.png \
#					| sed 's/\.png//' `'}.png}
#	\caption{QQ-plot using using SNPTEST simple frequentist approach}
#\end{figure}
#\end{frame}
#' >> slides.tex

#if [ -n "$covar" ]; then
#	echo '\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#					manhattan-plot-${dataset##*/}_snptest_add_cov_chrall.snptest.gz.png \
#					 | sed 's/\.png//' `'}.png}
#		\caption{Manhattan plot using SNPTEST frequentist approach and EIGENSOFTs proposed
#					covariates}
#	\end{figure}
#	\end{frame}

#	\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#					qq-plot-${dataset##*/}_snptest_add_cov_chrall.snptest.gz.png \
#					| sed 's/\.png//' `'}.png}
#		\caption{QQ-plot using SNPTEST frequentist approach and EIGENSOFTs proposed
#					covariates}
#	\end{figure}
#	\end{frame}

#' >> slides.tex
#fi





########---------------------------------------------------------
########      Also do an MLM association analysis using GCTA
########---------------------------------------------------------

######
##### MLM based association analysis including the candidate SNP (MLMi)
#####

#echo -e ${hru}
#${GCTAPATH} --bfile ${dataset} \
#			--autosome \
#			--maf 0.01 \
#			--remove ${outliers} \
#			--make-grm \
#			--out ${dataset##*/}_gcta_grm \
#			--thread-num ${threads} | tee ${dataset##*/}_gcta_grm.log
#echo -e ${hrb}'\n'

#echo -e ${hru}
#${GCTAPATH} --mlma \
#			--autosome \
#			--bfile ${dataset} \
#			--remove ${outliers} \
#			--pheno ${dataset}.fam \
#			--grm ${dataset##*/}_gcta_grm \
#			--mpheno 4 \
#			--out ${dataset##*/}_gcta_mlmi \
#			--thread-num ${threads} | tee ${dataset##*/}_gcta_mlmi.log
#echo -e ${hrb}'\n'

#if grep -q "Error" ${dataset##*/}_gcta_mlmi.log ; then
#	
#	echo '
#		\clearpage
#		\subsection{Mixed Linear Models Association}
#		Mixed Linear Models Association analysis could not be performed by GCTA, due to
#		small sample sizes leading to constraint of more than half variance components.
#		' >> report.tex
#	
#else
##	
#	sed -i -e '1!b;s/Chr/CHR/' \
#		-e '1!b;s/bp/BP/' \
#		-e '1!b;s/p/P/' \
#		-e '1!b;s/se/SE/' \
#		-e '1!b;s/b/STAT/' ${dataset##*/}_gcta_mlmi.mlma

#	######    Get top results ( p <= 1e-3 )
#	cat <(head -1 ${dataset##*/}_gcta_mlmi.mlma ) \
#		<(sort -gk9 ${dataset##*/}_gcta_mlmi.mlma | grep -v nan \
#							| awk '{if($9<=1e-3) print}') \
#			> ${dataset##*/}_gcta_mlmi_top.mlma
#	
#	echo -e '\nStep ❸'
#	echo -e ${hru}
#	${PLINK2PATH} --annotate ${dataset##*/}_gcta_mlmi_top.mlma \
#								ranges=${REFPATH}plink/glist-hg19 \
#					--border 20 \
#					--out ${dataset##*/}_gcta_mlmi_top \
#					--memory ${memory}
#	echo -e ${hrb}'\n'
#	echo -e '\nStep ❸'
#	echo -e ${hru}
#	${PLINK2PATH} --clump ${dataset##*/}_gcta_mlmi.mlma \
#					--allow-no-sex \
#					--bfile ${dataset} \
#					--remove ${outliers} \
#					--clump-range ${REFPATH}plink/glist-hg19 \
#					--clump-range-border 20 \
#					--out ${dataset##*/}_gcta_mlmi_clump \
#					--memory ${memory}
#	echo -e ${hrb}'\n'


#	######    Plot and zip
#	python ${SCRIPTPATH}manhattan_plot.py \
#											-f ${dataset##*/}_gcta_mlmi.mlma \
#											-s 8 0 2 1 \
#											-t 0.05 \
#											-l 1
#	python ${SCRIPTPATH}qq-plot.py -f ${dataset##*/}_gcta_mlmi.mlma \
#									-p 8 \
#									-l 1 \
#									-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
#										$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)
#	gzip -f ${dataset##*/}_gcta_mlmi.mlma
#	
#	echo -e ${hru}
#	python ${LDSCPATH}munge_sumstats.py \
#						--sumstats ${dataset##*/}_gcta_mlmi.mlma.gz \
#						--out ${dataset##*/}_gcta_mlmi_ldsc \
#						--N $(grep 'individuals' ${dataset##*/}_gcta_mlmi.log | tail -1 \
#								| awk '{print $1}') 
#	echo -e ${hrb}'\n'

#	echo -e ${hru}
#	python ${LDSCPATH}ldsc.py \
#						--h2 ${dataset##*/}_gcta_mlmi_ldsc.sumstats.gz \
#						--ref-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#						--w-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#						--out ${dataset##*/}_gcta_mlmi_ldsc_h2
#	echo -e ${hrb}'\n'

#	python -c "import scipy.stats,sys ; print(scipy.stats.norm.sf(abs((float(sys.argv[1])-1.0)/float(sys.argv[2]))))" $(grep Intercept ${dataset##*/}_gcta_mlmi_ldsc_h2.log | awk '{print $2,$3}' | tr -d '(' | tr -d ')') | tee ${dataset##*/}_gcta_mlmi_ldsc_h2.inpval
#	
#	
#	if [ -n "$covarpath" ]; then
#		
#		
#		covarcol=$(grep Control_Case $(dirname ${covarpath})/pca.pcalog | sort -gk2,2 \
#				| awk '{if($2<0.001) print}'| awk -F"_" '{print "$"$2+2}' \
#				| xargs | tr ' ' ',')
#		
#		awk '{print $1,$2,'"$covarcol"'}' ${covarpath} > gcta_covar.qcovar
#		
#		echo -e ${hru}
#		${GCTAPATH} --mlma \
#					--autosome \
#					--bfile ${dataset} \
#					--remove ${outliers} \
#					--reml-no-constrain \
#					--reml-bendV \
#					--grm ${dataset##*/}_gcta_grm \
#					--pheno ${dataset}.fam \
#					--mpheno 4 \
#					--qcovar gcta_covar.qcovar \
#					$(if [ -n "$dcovarpath" ] ; then echo "--covar "$dcovarpath ; fi) \
#					--out ${dataset##*/}_gcta_mlmi_covar \
#					--thread-num ${threads} | tee ${dataset##*/}_gcta_mlmi_covar.log
#		echo -e ${hrb}'\n'
#		
#		sed -i -e '1!b;s/Chr/CHR/' \
#			-e '1!b;s/bp/BP/' \
#			-e '1!b;s/p/P/' \
#			-e '1!b;s/se/SE/' \
#			-e '1!b;s/b/STAT/' ${dataset##*/}_gcta_mlmi_covar.mlma

#		######    Get top results ( p <= 1e-3 )
#		cat <(head -1 ${dataset##*/}_gcta_mlmi_covar.mlma ) \
#			<(sort -gk9 ${dataset##*/}_gcta_mlmi_covar.mlma | grep -v nan \
#								| awk '{if($9<=1e-3) print}') \
#				> ${dataset##*/}_gcta_mlmi_top.mlma
#	
#		echo -e '\nStep ❸'
#		echo -e ${hru}
#		${PLINK2PATH} --annotate ${dataset##*/}_gcta_mlmi_top.mlma \
#									ranges=${REFPATH}plink/glist-hg19 \
#						--border 20 \
#						--out ${dataset##*/}_gcta_mlmi_top \
#						--memory ${memory}
#		echo -e ${hrb}'\n'
#		echo -e '\nStep ❸'
#		echo -e ${hru}
#		${PLINK2PATH} --clump ${dataset##*/}_gcta_mlmi_covar.mlma \
#						--allow-no-sex \
#						--bfile ${dataset} \
#						--remove ${outliers} \
#						--clump-range ${REFPATH}plink/glist-hg19 \
#						--clump-range-border 20 \
#						--out ${dataset##*/}_gcta_mlmi_clump \
#						--memory ${memory}
#		echo -e ${hrb}'\n'


#		######    Plot and zip
#		python ${SCRIPTPATH}manhattan_plot.py \
#										-f ${dataset##*/}_gcta_mlmi_covar.mlma \
#										-s 8 0 2 1 \
#										-t 0.05 \
#										-l 1
#		python ${SCRIPTPATH}qq-plot.py -f ${dataset##*/}_gcta_mlmi_covar.mlma \
#										-p 8 \
#										-l 1 \
#										-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
#											$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)
#		gzip -f ${dataset##*/}_gcta_mlmi_covar.mlma
#	fi
#	
#	
#	
#	
#	####
#	#### MLM leaving-one-chromosome-out (LOCO) analysis
#	####
#	
#	
#	if [ "$(cat ${dataset##*/}.fam | wc -l )" -gt 5000 ] ; then 
#		
#		for chr in $(seq 1 22) ; do
#		
#			${GCTAPATH} --bfile ${dataset} \
#						--maf 0.01 \
#						--chr ${chr} \
#						--remove ${outliers} \
#						--make-grm \
#						--out ${dataset##*/}_gcta_grm_chr${chr} \
#						--thread-num ${threads} \
#									| tee ${dataset##*/}_gcta_grm_chr${chr}.log
#		done
#	
#		for chr in $(seq 1 22) ; do
#			${GCTAPATH} --mlma \
#						--chr ${chr} \
#						--grm ${dataset##*/}_gcta_grm \
#						--mlma-subtract-grm ${dataset##*/}_gcta_grm_chr${chr} \
#						--bfile ${dataset} \
#						--remove ${outliers} \
#						--pheno ${dataset}.fam \
#						--mpheno 4 \
#						--out ${dataset##*/}_gcta_mlmaloco_chr${chr} \
#						--thread-num ${threads} \
#									| tee ${dataset##*/}_gcta_mlmaloco_chr${chr}.log
#		done
#	
#		cat ${dataset##*/}_gcta_mlmaloco_chr?.mlma \
#			${dataset##*/}_gcta_mlmaloco_chr1?.mlma \
#			${dataset##*/}_gcta_mlmaloco_chr2?.mlma \
#			| sed '1b;/^Chr/d' > ${dataset##*/}_gcta_mlmaloco.loco.mlma
#	
#	else
#	
#		${GCTAPATH} --mlma-loco \
#					--autosome \
#					--bfile ${dataset} \
#					--remove ${outliers} \
#					--reml-no-constrain \
#					--reml-bendV \
#					--pheno ${dataset}.fam \
#					--mpheno 4 \
#					--out ${dataset##*/}_gcta_mlmaloco \
#					--thread-num ${threads} | tee ${dataset##*/}_gcta_mlmaloco.log
#	
#	fi
#	
#	sed -i -e '1!b;s/Chr/CHR/' \
#		-e '1!b;s/bp/BP/' \
#		-e '1!b;s/p/P/' \
#		-e '1!b;s/se/SE/' \
#		-e '1!b;s/b/STAT/' ${dataset##*/}_gcta_mlmaloco.loco.mlma
#	
#	######    Get top results ( p <= 1e-3 )
#	cat <(head -1 ${dataset##*/}_gcta_mlmaloco.loco.mlma ) \
#		<(sort -gk9 ${dataset##*/}_gcta_mlmaloco.loco.mlma | grep -v nan \
#							| awk '{if($9<=1e-3) print}') \
#			> ${dataset##*/}_gcta_mlmaloco_top.loco.mlma

#	echo -e '\nStep ❸'
#	echo -e ${hru}
#	${PLINK2PATH} --annotate ${dataset##*/}_gcta_mlmaloco_top.loco.mlma \
#								ranges=${REFPATH}plink/glist-hg19 \
#					--border 20 \
#					--out ${dataset##*/}_gcta_mlmaloco_top \
#					--memory ${memory}
#	echo -e ${hrb}'\n'
#	echo -e '\nStep ❸'
#	echo -e ${hru}
#	${PLINK2PATH} --clump ${dataset##*/}_gcta_mlmaloco.loco.mlma \
#					--allow-no-sex \
#					--bfile ${dataset} \
#					--remove ${outliers} \
#					--clump-range ${REFPATH}plink/glist-hg19 \
#					--clump-range-border 20 \
#					--out ${dataset##*/}_gcta_mlmaloco_clump \
#					--memory ${memory}
#	echo -e ${hrb}'\n'

#	gzip ${dataset##*/}_gcta_mlmaloco_chr?.mlma &
#	gzip ${dataset##*/}_gcta_mlmaloco_chr1?.mlma &
#	gzip ${dataset##*/}_gcta_mlmaloco_chr2?.mlma &
#	gzip -f ${dataset##*/}_gcta_mlmaloco.loco.mlma
#	wait

#	######    Plot and zip
#	python ${SCRIPTPATH}manhattan_plot.py \
#										-f ${dataset##*/}_gcta_mlmaloco.loco.mlma.gz \
#										-s 8 0 2 1 \
#										-t 0.05 \
#										-l 1
#	python ${SCRIPTPATH}qq-plot.py -f ${dataset##*/}_gcta_mlmaloco.loco.mlma.gz \
#									-p 8 \
#									-l 1 \
#									-s $(awk '{if($6==2) print}' ${dataset}.fam | wc -l) \
#										$(awk '{if($6==1) print}' ${dataset}.fam | wc -l)
#	
#	echo -e ${hru}
#	python ${LDSCPATH}munge_sumstats.py \
#						--sumstats ${dataset##*/}_gcta_mlmaloco.loco.mlma.gz \
#						--out ${dataset##*/}_gcta_mlmaloco_ldsc \
#						--N $(grep 'individuals' ${dataset##*/}_gcta_mlmaloco.log | tail -1 \
#								| awk '{print $1}') 
#	echo -e ${hrb}'\n'

#	echo -e ${hru}
#	python ${LDSCPATH}ldsc.py \
#						--h2 ${dataset##*/}_gcta_mlmaloco_ldsc.sumstats.gz \
#						--ref-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#						--w-ld-chr ${LDSCPATH}eur_w_ld_chr/ \
#						--out ${dataset##*/}_gcta_mlmaloco_ldsc_h2
#	echo -e ${hrb}'\n'

#	python -c "import scipy.stats,sys ; print(scipy.stats.norm.sf(abs((float(sys.argv[1])-1.0)/float(sys.argv[2]))))" $(grep Intercept ${dataset##*/}_gcta_mlmaloco_ldsc_h2.log | awk '{print $2,$3}' | tr -d '(' | tr -d ')') | tee ${dataset##*/}_gcta_mlmaloco_ldsc_h2.inpval
#	
#	echo '
#	\clearpage
#	\subsection{Mixed Linear Models Association}
#	In this section we desribed the MLM association as utilized by GCTA. For the analysis
#	to have maximum accuracy, a total number of more than 3000 samples is required.

#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#					manhattan-plot-${dataset##*/}_gcta_mlmi.mlma.png \
#					| sed 's/\.png//' `'}.png}
#		\caption{Manhattan plot using MLMi}
#	\end{figure}

#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#							qq-plot-${dataset##*/}_gcta_mlmi.mlma.png \
#							| sed 's/\.png//' `'}.png}
#		\caption{QQ-plot using MLMi}
#	\end{figure}
#	
#	\begin{table}[H]
#		\caption{LDSC intercept statistics}
#		\centering
#		\begin{tabularx}{0.5\textwidth}{ll}\toprule
#					h_{SNP}^2 : & '`grep Observed ${dataset##*/}_gcta_mlmi_ldsc_h2.log \
#					| awk '{print $5,$6}' `' \\
#					'`grep Intercept ${dataset##*/}_gcta_mlmi_ldsc_h2.log \
#					| sed 's/ /\&/' `' \\
#					'`grep Ratio ${dataset##*/}_gcta_mlmi_ldsc_h2.log \
#					| sed 's/ /\&/' `' \\
#					Intercept p-value: & 
#					'`cat ${dataset##*/}_gcta_mlmi_ldsc_h2.inpval`' \\
#			\bottomrule
#		\end{tabularx}
#	\end{table}

#	\begin{table}[H]
#		\caption{Top annotated results using MLMi}
#		\centering
#		\begin{scriptsize}
#		\begin{tabularx}{\textwidth}{lLLLLLLp{3cm}}\toprule
#			'`awk '{print $2,$1,$3,$4,$7,$9,$10}' \
#					${dataset##*/}_gcta_mlmi_top.annot \
#					| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#			\bottomrule
#		\end{tabularx}
#		\end{scriptsize}
#	\end{table}

#	\begin{table}[H]
#		\caption{Top annotated clumped using MLMi}
#		\centering
#		\begin{scriptsize}
#		\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
#			'`awk '{print $2,$1,$3,$4,$5,$6,$7}' \
#					${dataset##*/}_gcta_mlmi_clump.clumped.ranges \
#					| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#			\bottomrule
#		\end{tabularx}
#		\end{scriptsize}
#	\end{table}

#	\clearpage

#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#				manhattan-plot-${dataset##*/}_gcta_mlmaloco.loco.mlma.gz.png \
#				| sed 's/\.png//' `'}.png}
#		\caption{Manhattan plot using MLMe-LOCO}
#	\end{figure}

#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#					qq-plot-${dataset##*/}_gcta_mlmaloco.loco.mlma.gz.png \
#					| sed 's/\.png//' `'}.png}
#		\caption{QQ-plot using MLMe-LOCO}
#	\end{figure}
#	
#	\begin{table}[H]
#		\caption{LDSC intercept statistics}
#		\centering
#		\begin{tabularx}{0.5\textwidth}{ll}\toprule
#					h_{SNP}^2 : & '`grep Observed ${dataset##*/}_gcta_mlmaloco_ldsc_h2.log \
#					| awk '{print $5,$6}' `' \\
#					'`grep Intercept ${dataset##*/}_gcta_mlmaloco_ldsc_h2.log \
#					| sed 's/ /\&/' `' \\
#					'`grep Ratio ${dataset##*/}_gcta_mlmaloco_ldsc_h2.log \
#					| sed 's/ /\&/' `' \\
#					Intercept p-value: & 
#					'`cat ${dataset##*/}_gcta_mlmaloco_ldsc_h2.inpval`' \\
#			\bottomrule
#		\end{tabularx}
#	\end{table}

#	\begin{table}[H]
#		\caption{Top annotated results using MLMe-LOCO}
#		\centering
#		\begin{scriptsize}
#		\begin{tabularx}{\textwidth}{lLLLLLLp{3cm}}\toprule
#			'`awk '{print $2,$1,$3,$4,$7,$9,$10}' \
#					${dataset##*/}_gcta_mlmaloco_top.annot \
#					| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#			\bottomrule
#		\end{tabularx}
#		\end{scriptsize}
#	\end{table}

#	\begin{table}[H]
#		\caption{Top annotated clumped using MLMe-LOCO}
#		\centering
#		\begin{scriptsize}
#		\begin{tabularx}{\textwidth}{lLLLlLp{5cm}}\toprule
#			'`awk '{print $2,$1,$3,$4,$5,$6,$7}' \
#				${dataset##*/}_gcta_mlmaloco_clump.clumped.ranges \
#					| head -20 | sed 's/ /\&/g' | awk '{print $0,"\\\\\\\\"}'`'
#			\bottomrule
#		\end{tabularx}
#		\end{scriptsize}
#	\end{table}

#	' >> report.tex

#	echo '

#	\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#					manhattan-plot-${dataset##*/}_gcta_mlmi.mlma.png \
#					| sed 's/\.png//' `'}.png}
#		\caption{Manhattan plot using MLMi}
#	\end{figure}
#	\end{frame}

#	\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#							qq-plot-${dataset##*/}_gcta_mlmi.mlma.png \
#							| sed 's/\.png//' `'}.png}
#		\caption{QQ-plot using MLMi}
#	\end{figure}
#	\end{frame}

#	\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=\textwidth,keepaspectratio]{{'`readlink -e \
#					manhattan-plot-${dataset##*/}_gcta_mlmaloco.loco.mlma.png \
#					| sed 's/\.png//' `'}.png}
#		\caption{Manhattan plot using MLMe-LOCO}
#	\end{figure}
#	\end{frame}

#	\begin{frame}{Association of \texttt{\detokenize{'${dataset##*/}'}}}
#	\begin{figure}[H]
#		\centering
#		\includegraphics[width=0.5\textwidth,keepaspectratio]{{'`readlink -e \
#					qq-plot-${dataset##*/}_gcta_mlmaloco.loco.mlma.png \
#					| sed 's/\.png//' `'}.png}
#		\caption{QQ-plot using MLMe-LOCO}
#	\end{figure}
#	\end{frame}

#	' >> slides.tex
#fi







echo -e '\n\n'
echo -e ${hru}
echo -e '               Writing the report and the slides on LaTeX ✄ ✏\n'

echo '\end{document}' >> report.tex
pdflatex -interaction=batchmode report.tex
rm -rf report.aux report.log

echo '\end{document}' >> slides.tex
pdflatex -interaction=batchmode slides.tex
rm -rf slides.aux slides.log slides.nav slides.out slides.snm slides.toc
echo -e ${hrb}'\n'

echo -e $endheader

date >> runtime.info

cd ..
